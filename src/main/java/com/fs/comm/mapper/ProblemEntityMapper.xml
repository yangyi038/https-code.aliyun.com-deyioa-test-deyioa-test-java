<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fs.comm.mapper.ProblemEntityMapper">
	<resultMap id="BaseResultMap" type="com.fs.comm.model.ProblemEntity">
		<result column="ID" property="id" jdbcType="VARCHAR" />
		<result column="ShopID" property="shopid" jdbcType="VARCHAR" />
		<result column="CategoryID" property="categoryid" jdbcType="VARCHAR" />
		<result column="QCate" property="qcate" jdbcType="VARCHAR" />
		<result column="Industry" property="industry" jdbcType="VARCHAR" />
		<result column="Question" property="question" jdbcType="VARCHAR" />
		<result column="Derive" property="derive" jdbcType="VARCHAR" />
		<result column="Bugs" property="bugs" jdbcType="VARCHAR" />
		<result column="Reason" property="reason" jdbcType="VARCHAR" />
		<result column="TitleID" property="titleid" jdbcType="VARCHAR" />
		<result column="TitleName" property="titlename" jdbcType="VARCHAR" />
		<result column="Relation" property="relation" jdbcType="VARCHAR" />
		<result column="RelationName" property="relationname" jdbcType="VARCHAR" />
		<result column="Recommend" property="recommend" jdbcType="VARCHAR" />
		<result column="Suggest" property="suggest" jdbcType="VARCHAR" />
		<result column="UserID" property="userid" jdbcType="VARCHAR" />
		<result column="CreateTime" property="createtime" jdbcType="VARCHAR" />
		<result column="deflg" property="deflg" jdbcType="TINYINT" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.fs.comm.model.ProblemEntity"
		extends="BaseResultMap">
		<result column="Answer" property="answer" jdbcType="LONGVARCHAR" />
	</resultMap>

	<!-- 获取问题列表 -->
	<select id="getProblemList" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		pro.id,
		pro.Question as question,
		ans.answer as answer,
		ans.id as answerid,
		pro.Derive as derive,
		pro.bugs as bugs,
		pro.reason as reason,
		pro.CategoryID,
		ans.relationname as relationname,
		ans.recommend as recommend,
		ans.suggest as suggest,
		pro.qcate as qcate,
		par.pname as industry,
		shop.Name as shopName,
		par2.pname as categoryName
		from yz_problem pro
		left join yz_shop shop
		on pro.ShopID = shop.id
		
		left join yz_category cat
		on pro.CategoryID = cat.ID
		
		LEFT JOIN yz_answer ans
		on pro.ID = ans.problemid
		and ans.deflg = 1
		
		LEFT JOIN parameter par
		ON pro.Industry = par.pcode
		AND par.ptype = 'industry'
		
		LEFT JOIN parameter par2
		ON pro.CategoryID = par.pcode
		AND par.ptype = 'category'
		where pro.deflg = 1
		<if test="shopid!=null and shopid!=''">
			and pro.ShopID =#{shopid}
		</if>

		<if test="industryid!=null and industryid!=''">
			and pro.industry =#{industryid}
		</if>

		<if test="qcateid!=null and qcateid!=''">
			and pro.qcate =#{qcateid}
		</if>

		<if test="categoryid!=null and categoryid!=''">
			and pro.categoryid =#{categoryid}
		</if>
		
		<if test="name!=null and name!=''">
			and (pro.question like '%${name}%'
			or pro.derive like '%${name}%'
			or ans.answer like '%${name}%'
			or pro.qcate like '%${name}%')
		</if>
		order by pro.qcate, pro.Question
	</select>

	<!-- 查询已经删除的问题和答案 -->
	<select id="selectAnswer" parameterType="java.util.Map" 
  			resultType="com.fs.comm.model.ProblemEntity">
			select
				pro.id,
				pro.Question as question,
				ans.answer as answer,
				ans.id as answerid,
				pro.Derive as derive,
				pro.bugs as bugs,
				pro.reason as reason,
				pro.CategoryID,
				ans.relationname as relationname,
				ans.recommend as recommend,
				ans.suggest as suggest,
				pro.qcate as qcate,
				par.pname as industry,
				shop.Name as shopName,
				par2.pname as categoryName
			FROM yz_problem pro
			
			left join yz_shop shop
			on pro.ShopID = shop.id
			
			left join yz_category cat
			on pro.CategoryID = cat.ID
			
			LEFT JOIN yz_cate cate
			on pro.QCate = cate.ID
			
			LEFT JOIN yz_answer ans
			on pro.ID = ans.problemid
			
			LEFT JOIN parameter par
			ON pro.Industry = par.pcode
			AND par.ptype = 'industry'
			
			LEFT JOIN parameter par2
			ON pro.CategoryID = par.pcode
			AND par.ptype = 'category'
			where pro.deflg = 0 or ans.deflg = 0
			order by pro.updatetime DESC,ans.updatetime DESC
  	</select>

	<!-- 通过主键获取问题列表 -->
	<select id="getProblemListByid" resultMap="BaseResultMap"
		parameterType="com.fs.comm.model.ProblemEntity">
		select
		*
		from yz_problem
		where 1=1
		<if test="id!=null and id!=''">
			and id = #{id}
		</if>
	</select>

	<!-- 获取分类列表 -->
	<select id="getQcateList" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		SELECT
		*
		FROM
		yz_problem
	</select>

	<!-- 插入问题操作 -->
	<insert id="insertSelective" parameterType="com.fs.comm.model.ProblemEntity">
		insert into yz_problem
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="shopid != null">
				ShopID,
			</if>
			<if test="categoryid != null">
				CategoryID,
			</if>
			<if test="qcate != null">
				QCate,
			</if>
			<if test="industry != null">
				Industry,
			</if>
			<if test="question != null">
				Question,
			</if>
			<if test="derive != null">
				Derive,
			</if>
			<if test="bugs != null">
				Bugs,
			</if>
			<if test="reason != null">
				Reason,
			</if>
			<if test="titleid != null">
				TitleID,
			</if>
			<if test="titlename != null">
				TitleName,
			</if>
			<if test="userid != null">
				UserID,
			</if>
			<if test="createtime != null">
				CreateTime,
			</if>
			<if test="deflg != null">
				deflg,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="shopid != null">
				#{shopid,jdbcType=VARCHAR},
			</if>
			<if test="categoryid != null">
				#{categoryid,jdbcType=VARCHAR},
			</if>
			<if test="qcate != null">
				#{qcate,jdbcType=VARCHAR},
			</if>
			<if test="industry != null">
				#{industry,jdbcType=VARCHAR},
			</if>
			<if test="question != null">
				#{question,jdbcType=VARCHAR},
			</if>
			<if test="derive != null">
				#{derive,jdbcType=VARCHAR},
			</if>
			<if test="bugs != null">
				#{bugs,jdbcType=VARCHAR},
			</if>
			<if test="reason != null">
				#{reason,jdbcType=VARCHAR},
			</if>
			<if test="titleid != null">
				#{titleid,jdbcType=VARCHAR},
			</if>
			<if test="titlename != null">
				#{titlename,jdbcType=VARCHAR},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=VARCHAR},
			</if>
			<if test="deflg != null">
				#{deflg},
			</if>
		</trim>
	</insert>

	<!-- 更新问题操作 -->
	<update id="updateProblem" parameterType="com.fs.comm.model.ProblemEntity">
		update yz_problem
		<set>
			<if test="shopid != null">
				shopid = #{shopid},
			</if>
			<if test="derive != null">
				derive = #{derive},
			</if>
			<if test="categoryid != null">
				categoryid = #{categoryid},
			</if>
			<if test="qcate != null">
				qcate = #{qcate},
			</if>
			<if test="industry != null">
				industry = #{industry},
			</if>
			<if test="question != null">
				question = #{question},
			</if>
			<if test="bugs != null">
				bugs = #{bugs},
			</if>
			<if test="updatetime != null">
				updatetime = #{updatetime},
			</if>
		</set>
		where id = #{id}
	</update>

	<!-- 删除问题 -->
	<update id="deleteProblem" parameterType="com.fs.comm.model.ProblemEntity">
		update yz_problem
		<set>
			deflg = 0,
			updatetime = #{updatetime}
		</set>
		where id = #{id}
	</update>
	
	<!-- 恢复问题 -->
	<update id="recoveryProblem" parameterType="com.fs.comm.model.ProblemEntity">
		update yz_problem
		<set>
			deflg = 1,
			updatetime = #{updatetime}
		</set>
		where id = #{id}
	</update>
</mapper>